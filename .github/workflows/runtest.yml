name: test
on: [pull_request]  #, push]

jobs:
  # Runs the tests on combinations of the supported python/os matrix.
  test-code-macOS:
    runs-on: "macos-latest"
    strategy:
      matrix:
        python-version: [3.7, 3.8]
      fail-fast: false

    steps:
      - uses: actions/checkout@v1

      - name: Setup conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('.github/test_conda_env_macOS.yml') }}
      - uses: goanpeca/setup-miniconda@v1
        with:
          miniconda-version: 'latest'
          python-version: ${{ matrix.python-version }}
          activate-environment: eqcorrscan-test
          environment-file: .github/test_conda_env_macOS.yml
          condarc-file: .github/test_condarc.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: install eqcorrscan
        shell: bash -l {0}
        run: |
          pip install -e .

      - name: print package info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      - name: run main test suite
        shell: bash -l {0}
        continue-on-error: true
        run: |
          py.test -n 2 -m "not serial and not network and not superslow" --cov-report=xml
      - name: run slow tests
        shell: bash -l {0}
        run: |
          py.test -v -m "slow and not serial and not network" --cov-report=xml --cov-append
      - name: run serial test
        shell: bash -l {0}
        run: |
          export OMP_NUM_THREADS=2
          py.test -m "serial and not network" --cov-report=xml --cov-append

      - name: upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          yml: ./codecov.yml
          fail_ci_if_error: true

  test-code-ubuntu:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: [3.7, 3.8]
      fail-fast: false

    steps:
      - uses: actions/checkout@v1

      - name: Setup conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('.github/test_conda_env.yml') }}
      - uses: goanpeca/setup-miniconda@v1
        with:
          miniconda-version: 'latest'
          python-version: ${{ matrix.python-version }}
          activate-environment: eqcorrscan-test
          environment-file: .github/test_conda_env.yml
          condarc-file: .github/test_condarc.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: install eqcorrscan
        shell: bash -l {0}
        run: |
          pip install -e .

      - name: print package info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      - name: run main test suite
        shell: bash -l {0}
        run: |
          py.test -n 2 -m "not serial and not network and not superslow" --cov-report=xml
      - name: run slow tests
        shell: bash -l {0}
        run: |
          py.test -v -m "slow and not serial and not network" --cov-report=xml --cov-append
      - name: run serial test
        shell: bash -l {0}
        run: |
          export OMP_NUM_THREADS=2
          py.test -m "serial and not network" --cov-report=xml --cov-append

      - name: upload coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          yml: ./codecov.yml
          fail_ci_if_error: true

# This is a very useful step for debugging, it allows you to ssh into the CI
# machine (https://github.com/marketplace/actions/debugging-with-tmate).
# Make sure to open the log before the job starts else you cant see the tmate
# url. See https://github.com/mxschmitt/action-tmate/issues/1.
# Also, the CI machine will close on a non-zero exit code (annoying). This can
# be overcome by coalescing the null command like so:
# $ some-command-that-can-fail || :
#
#- name: Setup tmate session
#  uses: mxschmitt/action-tmate@v1